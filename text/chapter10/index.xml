<?xml version='1.0' encoding='Shift_JIS' ?>

<!DOCTYPE doc SYSTEM "../smartdoc.dtd"[
<!ENTITY CHAPTER "chapter10">
]>

<doc xml:lang='ja'>

	<head>
		<title>ゲームを作ろう！</title>
	</head>

	<body>

		<section title="学習目標">
			<ul>
				<li>キーボード、マウスを使ってユーザと対話するプログラムを作れるようになる</li>
				<li>オブジェクト同士の当たり判定を取得し、オブジェクトが連携して動作するプログラムを作れるようになる</li>
			</ul>
		</section>

		<section title="キーボード入力の判定">

			<section title="キーコードの取得">

				<p>
					key()命令を使うと、いま押されているキーボードの番号（キーコード）を
					調べることができます。
				</p>
				<p>
					次のプログラムは、左キーを押すと，車が左に動くプログラムです。
				</p>
				
				<text.turtle.applet class="HandleKey" chapter="&CHAPTER;"/>
				<fyi title="キー入力を受け取る新しい命令">
					<dl>
						<dt>key()</dt>
						<dd>
							<p>
								いま押されているキーボードの番号（キーコード）を調べることができます。
							</p>
							<p>
								何も押されていない時は、キーコードが -1 になります。
							</p>
						</dd>
					</dl>
				</fyi>

			</section>

			<section title="キーコードを調べる">
				<p>
					キーボードのキーに対応するキーコードを調べるには、
					次のプログラムを使うと良いでしょう。
				</p>
				<text.turtle.applet class="CheckKeycode" chapter="&CHAPTER;"/>						
			</section>
			
			<section title="個別にキーが押されているかどうかを調べて，同時押しに対応する">
				<p>
					key()命令は、最後に押されたキーを調べるだけで、同時押しに対応できません。
					同時押しに対応するに、今何が押されているかを個別に調べる必要があります。
					そのようなときは，keyDown命令を使います。
				</p>
				<text.turtle.applet class="HandleKeyDown" chapter="&CHAPTER;"/>
				<fyi title="キー入力を受け取る新しい命令">
					<dl>
						<dt>keyDown([キーコード])</dt>
						<dd>
							<p>
								キーコードで指定されてキーボードが押されているかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
					</dl>
				</fyi>
			</section>
		</section>

		<section title="マウス入力の判定">

			<section title="マウスの位置を調べる">

			<p>
				mouseX()、mouseY() 命令を使うと，
				マウスが今どこにいるのかを調べることができます。
			</p>
			<p>下のプログラムは、マウスの位置に車が移動するプログラムです。</p>
			<text.turtle.applet class="HandleMouse" chapter="&CHAPTER;"/>
				<fyi title="マウスの位置を調べる新しい命令">
					<dl>
						<dt>mouseX()</dt>
						<dd>
							<p>
								マウスのx座標を取得します。
							</p>
						</dd>
						<dt>mouseY()</dt>
						<dd>
							<p>
								マウスのy座標を取得します。
							</p>
						</dd>
					</dl>
				</fyi>
			<p>
				x()、y()、mouseX()、mouseY()命令で取得した座標は，
				わざわざ変数に入れなくても、そのまま他の命令で使う値として使うこともできます。
			</p>

			<text.turtle.applet class="HandleMouse2" chapter="&CHAPTER;"/>
			</section>

			<section title="マウスが押されているかどうか調べる">

			<p>
				mouseDown()命令を使うと、マウスが押されているか調べることができます。
				mouseX()、mouseY() 命令と組み合わせて使うと、どこで押されているかも調べられます。
			</p>
			<p>下のプログラムは、マウスをクリックした所に車が移動するプログラムです。</p>
			<text.turtle.applet class="HandleMouse3" chapter="&CHAPTER;"/>

				<fyi title="マウスクリックを調べる新しい命令">
					<dl>
						<dt>mouseClicked()</dt>
						<dd>
							<p>
								いまマウスがクリックされたかどうか調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
					</dl>
				</fyi>

			</section>

			<section title="マウス入力を詳しく調べる">
	
				<p>
					マウスボタンの左右クリックや、ダブルクリックを調べる場合は，
					次のようなプログラムを書きます。
				</p>
	
				<text.turtle.applet class="HandleMouse4" chapter="&CHAPTER;"/>

				<fyi title="マウス入力を詳しく調べる新しい命令">
					<dl>
						<dt>leftMouseClicked()</dt>
						<dd>
							<p>
								マウスの左ボタンがクリックされたかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
						<dt>rightMouseClicked()</dt>
						<dd>
							<p>
								マウスの右ボタンがクリックされたかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
						<dt>doubleClick()</dt>
						<dd>
							<p>
								マウスがダブルクリックされたかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
					</dl>
				</fyi>
			</section>
			
			<section title="ドラッグを調べる">
	
				<p>
					マウスボタンが今押されているかどうかを調べる場合は、	次のようなプログラムを書きます。
				</p>	
				<text.turtle.applet class="HandleMouseDown" chapter="&CHAPTER;"/>
							
				<fyi title="マウス入力を調べる新しい命令">
					<dl>
						<dt>mouseDown()</dt>
						<dd>
							<p>
								いまマウスが押されているかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
						<dt>leftMouseDown()</dt>
						<dd>
							<p>
								いまマウスの左ボタンが押されているかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>
						<dt>rightMouseDown()</dt>
						<dd>
							<p>
								いまマウスの右ボタンが押されているかどうかを調べます。
								必ず、if文の条件文の中に書いて下さい。
							</p>
						</dd>						
					</dl>
				</fyi>
			</section>
		</section>

		<section title="あたり判定">

			<section title="２つのオブジェクトのあたり判定">

			<p>
				intersects()命令を使うと、2つのオブジェクトが当たっているかどうか、
				調べることができます。
			</p>
			<p>
				下のプログラムは、車がドラえもんに当たると、ドラえもんが小さくなるプログラムです（マウスで車を動かせます）。
			</p>

			<text.turtle.applet class="IntersectsJudge" chapter="&CHAPTER;"/>
				<fyi title="あたり判定に関する新しい命令">
					<dl>
						<dt>intersects([判定相手のオブジェクト])</dt>
						<dd>
							オブジェクトが、指定された判定相手のオブジェクトと当たっているかどうか調べます。
							必ず、if文の条件文の中に書いて下さい。
						</dd>
					</dl>
				</fyi>
			</section>

			<section title="座標とオブジェクトのあたり判定">

			<p>
				2つのオブジェクトのあたり判定でなく、マウスの位置が、オブジェクトと当たっているか判定したい時があります。
			</p>
			<p>
				下のプログラムは、マウスが車の上に来る（マウスの座標が車の領域に含まれる）と、車が小さくなるプログラムです。
			</p>

			<text.turtle.applet class="ContainsJudge" chapter="&CHAPTER;"/>
				<fyi title="座標とオブジェクトのあたり判定に関する新しい命令">
					<dl>
						<dt>contains([x座標], [y座標])</dt>
						<dd>
							オブジェクトが指定された座標内に含まれているかどうか調べます。
							必ず、if文の条件文の中に書いて下さい。
						</dd>
					</dl>
				</fyi>
			</section>

		</section>

		<section title="練習問題">
			<section title="プレイヤーを操作出来るようにしよう">
				<p>
					プレイヤーの画像を用意し、キーボードの矢印（↑→←↓）キーを使って、プレイヤーを上下左右に操作するプログラムを作りましょう。
				</p>
				<text.turtle.applet.nodownload class="Kadai01" chapter="&CHAPTER;"/>
				<p>
					プレイヤーの画像は、ネットのフリー素材集などから好みのものを探し、ダウンロードして使ってみよう。
				</p>
				<p>ファイル名は「KeyHandler.java」とすること．</p>
			</section>
			
			<section title="画像をドラッグ出来るようにしよう">
				<p>
					画像を用意し、マウスを使って、ドラッグできるプログラムを作ってみましょう。
				</p>
				<text.turtle.applet.nodownload class="Kadai02" chapter="&CHAPTER;"/>
				<p>ファイル名は「DrugHandler.java」とすること．</p>
			</section>

			<section title="得点板を作ろう">
				<p>
					アイテム（<a href="#sec:imageturtle">画像タートル</a>）と得点板（<a href="#sec:textturtle">テキストタートル</a>）をつくり、
					プレイヤーを操作してアイテムを取る（アイテムに触れる）と得点が増えるプログラムを作りましょう。
				</p>
				<p>ファイル名は「ScoreBoard.java」とすること．</p>
			</section>

			<section title="ゲームを作ろう">
				<p>
					自由な発想で、簡単なオリジナルゲームを作りましょう。
				</p>
				<p>
					下記はシューティングゲームのサンプルがあります。使い方は、ソースを読んで理解しよう。
				</p>
				<text.turtle.applet class="ShootingGame" chapter="&CHAPTER;"/>
				<p>
					付録にも作品例があります。
				</p>
				<p>ファイル名は「MyGame.java」とすること．</p>
			</section>
		</section>

	</body>
</doc>


